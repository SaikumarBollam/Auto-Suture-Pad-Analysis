services:
  api:
    build:
      context: .
      dockerfile: Dockerfile.api
    working_dir: /app
    ports:
      - "8000:8000"
    volumes:
      - .:/app
      - ./data:/app/data
      - ./logs:/app/logs
    environment:
      PYTHONPATH: /app/src
      ENVIRONMENT: development
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
    command: >
      bash -c "python src/api/run.py"
    depends_on:
      redis:
        condition: service_healthy
      minio:
        condition: service_healthy

  ml:
    build:
      context: .
      dockerfile: Dockerfile.ml
    working_dir: /app
    ports:
      - "8001:8001"
      - "8888:8888"
      - "6006:6006"
    volumes:
      - .:/app
      - ./data:/app/data
      - ./models:/app/models
      - ./logs:/app/logs
    environment:
      PYTHONPATH: /app/src
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8001/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
    command: >
      bash -c "python src/ml/run.py 
      --model-config /app/config/ml/config.yaml 
      --training-config /app/config/ml/config.yaml 
      --data-config /app/config/ml/config.yaml 
      --env dev 
      --root-dir /app 
      --prepare-data 
      --train 
      --evaluate 
      --export"
    depends_on:
      redis:
        condition: service_healthy
      mlflow:
        condition: service_healthy
      minio:
        condition: service_healthy

  redis:
    image: redis:alpine
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  mlflow:
    image: ghcr.io/mlflow/mlflow:latest
    ports:
      - "5000:5000"
    volumes:
      - ./mlruns:/mlruns
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:5000"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
    command: >
      mlflow server --host 0.0.0.0 --port 5000 --backend-store-uri file:/mlruns

  minio:
    image: minio/minio
    ports:
      - "9000:9000"
      - "9001:9001"
    volumes:
      - ./data:/data
    environment:
      MINIO_ROOT_USER: minioadmin
      MINIO_ROOT_PASSWORD: minioadmin
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:9000/minio/health/live"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
    command: server /data --console-address ":9001"

volumes:
  redis_data:
  minio_data:
